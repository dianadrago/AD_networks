library(plyr)
library(minet)
library(igraph)

adjs <- sort(list.files(pattern="*.adj"))

length(adjs)

adjtosqmtx <- function(g){
  a <- scan(file = g, skip = 17, what = "")
  m <- matrix(unlist(a[-(1)]), ncol = 2, byrow = T)
  rownames(m) <- c(m[,1])
  m <- t(m[,2])
  m
}

M <- lapply(adjs, adjtosqmtx)

> length(adjs)                                                                                                                                          
((12169**2)-12169)/2
[1] 74036196

x <- t(rbind.fill.matrix(M))
dim(x)
[1] 12169 12169

x[is.na(x)] <- 0
x[1:5, 1:5]
class(x) <- "numeric"
names <- gsub('.{6}$','', adjs)
colnames(x) <- names
x[1:5, 1:5]
isSymmetric(x)
[1] FALSE

x <- x[sort(rownames(x)), sort(colnames(x)) ]
isSymmetric(x)
[1] TRUE

x[1:5, 1:5]   

write.table(x, file = "x.adj_sanos.txt", sep = "\t", col.names= NA, row.names= T, quote = F )
xg <- graph.adjacency(adjmatrix= x, mode='undirected', diag=F, weighted=T)
xsif <- get.data.frame(xg)
write.table(xsif, file = "x_sanos.sif.txt", sep = "\t", col.names= T, row.names= F, quote = F )

normalit<-function(m){
     (m - min(m[upper.tri(m)]))/(max(m)-min(m[upper.tri(m)]))
}
x_norm <- (normalit(x))
diag(x_norm) <- 0
min(x)
[1] 0

min(x_norm)                                                                                                       
[1] 0

max(x)                                                                                                            
0.657639

max(x_norm)                                                                                                       
[1] 1

write.table(x_norm, file = "x.adj_norm_sanos.txt", sep = "\t", col.names= NA, row.names= T, quote = F )                 
xg_norm <- graph.adjacency(adjmatrix= x_norm, mode='undirected', diag=F, weighted=T)                                  
xsif_norm <- get.data.frame(xg_norm)                                                                            
write.table(xsif_norm, file = "x.sif_norm_sanos.txt", sep = "\t", col.names= T, row.names= F, quote = F )

sanos_q <- x_norm[upper.tri(x_norm, diag=FALSE)]
quantile(sanos_q)
quantile(sanos_q, probs=seq(0.995, 1, 0.00001))

> quantile(sanos_q)
        0%        25%        50%        75%       100% 
0.00000000 0.03526279 0.05647707 0.09500758 1.00000000

> quantile(sanos_q, probs=seq(0.995, 1, 0.00001))
  99.500%   99.501%   99.502%   99.503%   99.504%   99.505%   99.506%   99.507% 
0.4244666 0.4246248 0.4247790 0.4249426 0.4251035 0.4252725 0.4254266 0.4255883 
  99.508%   99.509%   99.510%   99.511%   99.512%   99.513%   99.514%   99.515% 
0.4257525 0.4259235 0.4260891 0.4262446 0.4264028 0.4265691 0.4267341 0.4268936 
  99.516%   99.517%   99.518%   99.519%   99.520%   99.521%   99.522%   99.523% 
0.4270598 0.4272411 0.4274020 0.4275656 0.4277346 0.4279050 0.4280699 0.4282366 
  99.524%   99.525%   99.526%   99.527%   99.528%   99.529%   99.530%   99.531% 
0.4283985 0.4285634 0.4287433 0.4289069 0.4290745 0.4292476 0.4294125 0.4295939 
  99.532%   99.533%   99.534%   99.535%   99.536%   99.537%   99.538%   99.539% 
0.4297749 0.4299453 0.4301205 0.4302873 0.4304469 0.4306199 0.4307849 0.4309620 
  99.540%   99.541%   99.542%   99.543%   99.544%   99.545%   99.546%   99.547% 
0.4311364 0.4313095 0.4314826 0.4316556 0.4318246 0.4320071 0.4321897 0.4323533 
  99.548%   99.549%   99.550%   99.551%   99.552%   99.553%   99.554%   99.555% 
0.4325345 0.4327087 0.4328852 0.4330523 0.4332362 0.4334093 0.4335972 0.4337743 
  99.556%   99.557%   99.558%   99.559%   99.560%   99.561%   99.562%   99.563% 
0.4339596 0.4341272 0.4343084 0.4344801 0.4346505 0.4348276 0.4349993 0.4351859 
  99.564%   99.565%   99.566%   99.567%   99.568%   99.569%   99.570%   99.571% 
0.4353482 0.4355280 0.4356929 0.4358728 0.4360512 0.4362446 0.4364177 0.4365975 
  99.572%   99.573%   99.574%   99.575%   99.576%   99.577%   99.578%   99.579% 
0.4367854 0.4369666 0.4371477 0.4373398 0.4375317 0.4377102 0.4378955 0.4380848 
  99.580%   99.581%   99.582%   99.583%   99.584%   99.585%   99.586%   99.587% 
0.4382835 0.4384747 0.4386608 0.4388609 0.4390448 0.4392367 0.4394287 0.4396194 
  99.588%   99.589%   99.590%   99.591%   99.592%   99.593%   99.594%   99.595% 
0.4398208 0.4400104 0.4401981 0.4403955 0.4405861 0.4407835 0.4409715 0.4411690 
0.5059871 0.5064139 0.5068232 0.5072680 0.5076950 0.5081428 0.5085784 0.5089906 
  99.836%   99.837%   99.838%   99.839%   99.840%   99.841%   99.842%   99.843% 
0.5094287 0.5098857 0.5103400 0.5107902 0.5112418 0.5117084 0.5122053 0.5126709 
  99.844%   99.845%   99.846%   99.847%   99.848%   99.849%   99.850%   99.851% 
0.5131509 0.5136025 0.5140731 0.5145449 0.5150567 0.5155157 0.5160052 0.5164783 
  99.852%   99.853%   99.854%   99.855%   99.856%   99.857%   99.858%   99.859% 
0.5169400 0.5174127 0.5178932 0.5184198 0.5189167 0.5194176 0.5199140 0.5204076 
  99.860%   99.861%   99.862%   99.863%   99.864%   99.865%   99.866%   99.867% 
0.5209204 0.5214281 0.5219709 0.5224830 0.5229852 0.5235291 0.5240582 0.5245877 
  99.868%   99.869%   99.870%   99.871%   99.872%   99.873%   99.874%   99.875% 
0.5251279 0.5256784 0.5262041 0.5267204 0.5272667 0.5278453 0.5284349 0.5290230 
  99.876%   99.877%   99.878%   99.879%   99.880%   99.881%   99.882%   99.883% 
0.5295652 0.5301324 0.5306901 0.5313276 0.5319029 0.5325180 0.5331347 0.5337180 
  99.884%   99.885%   99.886%   99.887%   99.888%   99.889%   99.890%   99.891% 
0.5343583 0.5349970 0.5356349 0.5362877 0.5369149 0.5375993 0.5382596 0.5388932 
  99.892%   99.893%   99.894%   99.895%   99.896%   99.897%   99.898%   99.899% 
0.5395517 0.5401807 0.5408398 0.5414868 0.5421260 0.5428348 0.5435236 0.5442422 
  99.900%   99.901%   99.902%   99.903%   99.904%   99.905%   99.906%   99.907% 
0.5449681 0.5456888 0.5464584 0.5472073 0.5479603 0.5486620 0.5493963 0.5501860 
  99.908%   99.909%   99.910%   99.911%   99.912%   99.913%   99.914%   99.915% 
0.5509740 0.5517717 0.5525357 0.5533347 0.5541311 0.5549503 0.5557685 0.5565565 
  99.916%   99.917%   99.918%   99.919%   99.920%   99.921%   99.922%   99.923% 
0.5573415 0.5581468 0.5590013 0.5597910 0.5606743 0.5616052 0.5623836 0.5632834 
  99.924%   99.925%   99.926%   99.927%   99.928%   99.929%   99.930%   99.931% 
0.5641815 0.5650222 0.5659226 0.5668606 0.5677926 0.5687643 0.5697222 0.5707323 
  99.932%   99.933%   99.934%   99.935%   99.936%   99.937%   99.938%   99.939% 
0.5716987 0.5727190 0.5737350 0.5747220 0.5758131 0.5768847 0.5779521 0.5790473 
  99.940%   99.941%   99.942%   99.943%   99.944%   99.945%   99.946%   99.947% 
0.5801330 0.5813080 0.5823937 0.5835192 0.5847706 0.5859507 0.5872761 0.5885750 
  99.948%   99.949%   99.950%   99.951%   99.952%   99.953%   99.954%   99.955% 
0.5898017 0.5911547 0.5924748 0.5938281 0.5951370 0.5965594 0.5980237 0.5995225 
  99.956%   99.957%   99.958%   99.959%   99.960%   99.961%   99.962%   99.963% 
0.6011822 0.6028336 0.6044727 0.6060932 0.6077520 0.6094747 0.6112425 0.6130632 
  99.964%   99.965%   99.966%   99.967%   99.968%   99.969%   99.970%   99.971% 
0.6149847 0.6168502 0.6187451 0.6207752 0.6228137 0.6249437 0.6270982 0.6293918 
  99.972%   99.973%   99.974%   99.975%   99.976%   99.977%   99.978%   99.979% 
0.6317750 0.6341438 0.6365986 0.6391877 0.6417313 0.6445203 0.6476461 0.6506675 
  99.980%   99.981%   99.982%   99.983%   99.984%   99.985%   99.986%   99.987% 
0.6538106 0.6572460 0.6607711 0.6642321 0.6680953 0.6725815 0.6769206 0.6817890 
  99.988%   99.989%   99.990%   99.991%   99.992%   99.993%   99.994%   99.995% 
0.6869679 0.6923521 0.6985054 0.7052604 0.7128702 0.7212065 0.7302949 0.7412145 
  99.996%   99.997%   99.998%   99.999%  100.000% 
0.7542126 0.7701207 0.7910152 0.8248470 1.0000000 


### 99.970%= 0.6270982
pvalue= 4.542367e-53

mi2p <- function(mi, n){
  alfa <- 1.062
  beta <- -48.7
  gamma <- -0.634
  x <- exp(-((mi*((-beta) + (-gamma)*n)) - alfa))
  return(x)
}

mi2p(0.6270982, 229)
[1] 4.542367e-53

x_norm[x_norm < 0.6270982] <- 0

write.table(x_norm, file = "sanos_norm_fpvalue.txt", sep = "\t", col.names= NA, row.names= T, quote = F)
xg_norm_fpvalue <- graph.adjacency(adjmatrix= x_norm, mode='undirected', diag=F, weighted=T)
xsif_norm_fpvalue <- get.data.frame(xg_norm_fpvalue)
write.table(xsif_norm_fpvalue, file = "sanos_norm_fpvalue_sif.txt", sep = "\t", col.names= T, row.names= F, quote = F )
xdpi <- aracne(mim =  x_norm, eps = 0.1)

write.table(xdpi, file = "sanos_norm_fpvalue_dpi.txt", sep = "\t", col.names= NA, row.names= T, quote = F)
xg_norm_fpvalue_dpi <- graph.adjacency(adjmatrix= xdpi, mode='undirected', diag=F, weighted=T)
xsif_norm_fpvalue_dpi <- get.data.frame(xg_norm_fpvalue_dpi)
write.table(xsif_norm_fpvalue_dpi, file = "sanos_norm_fpvalue_sif_dpi.txt", sep = "\t", col.names= T, row.names= F, quote = F )
