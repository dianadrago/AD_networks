
library(plyr)
library(minet)
library(igraph)

adjs <- sort(list.files(pattern="*.adj"))

length(adjs)

adjtosqmtx <- function(g){
  a <- scan(file = g, skip = 17, what = "")
  m <- matrix(unlist(a[-(1)]), ncol = 2, byrow = T)
  rownames(m) <- c(m[,1])
  m <- t(m[,2])
  m
}

M <- lapply(adjs, adjtosqmtx)

> length(adjs)                                                                                                                                          
((12169**2)-12169)/2
[1] 74036196

x <- t(rbind.fill.matrix(M))
dim(x)
[1] 12169 12169

x[is.na(x)] <- 0
x[1:5, 1:5]
class(x) <- "numeric"
names <- gsub('.{6}$','', adjs)
colnames(x) <- names
x[1:5, 1:5]
isSymmetric(x)
[1] FALSE

x <- x[sort(rownames(x)), sort(colnames(x)) ]
isSymmetric(x)
[1] TRUE

x[1:5, 1:5]   

write.table(x, file = "x.adj.txt", sep = "\t", col.names= NA, row.names= T, quote = F )
xg <- graph.adjacency(adjmatrix= x, mode='undirected', diag=F, weighted=T)
xsif <- get.data.frame(xg)
write.table(xsif, file = "x.sif.txt", sep = "\t", col.names= T, row.names= F, quote = F )

normalit<-function(m){
     (m - min(m[upper.tri(m)]))/(max(m)-min(m[upper.tri(m)]))
}
x_norm <- (normalit(x))
diag(x_norm) <- 0
min(x)
[1] 0

min(x_norm)                                                                                                       
[1] 0

max(x)                                                                                                            
0.657639

max(x_norm)                                                                                                       
[1] 1

write.table(x_norm, file = "x.adj_norm.txt", sep = "\t", col.names= NA, row.names= T, quote = F )                 
xg_norm <- graph.adjacency(adjmatrix= x_norm, mode='undirected', diag=F, weighted=T)                                  
xsif_norm <- get.data.frame(xg_norm)                                                                            
write.table(xsif_norm, file = "x.sif_norm.txt", sep = "\t", col.names= T, row.names= F, quote = F )

sanos_q <- x_norm[upper.tri(x_norm, diag=FALSE)]
quantile(sanos_q)
quantile(sanos_q, probs=seq(0.995, 1, 0.00001))

99.748%   99.749%   99.750%   99.751%   99.752%   99.753%   99.754%   99.755% 
0.4393355 0.4397735 0.4401855 0.4405990 0.4409856 0.4413970 0.4417901 0.4422055 
  99.836%   99.837%   99.838%   99.839%   99.840%   99.841%   99.842%   99.843% 
0.4426296 0.4430494 0.4434928 0.4439011 0.4443139 0.4447469 0.4451695 0.4456085 
  99.844%   99.845%   99.846%   99.847%   99.848%   99.849%   99.850%   99.851% 
0.4460278 0.4465009 0.4469359 0.4473639 0.4477994 0.4482410 0.4486734 0.4491452 
  99.852%   99.853%   99.854%   99.855%   99.856%   99.857%   99.858%   99.859% 
0.4495881 0.4500441 0.4505315 0.4510000 0.4514930 0.4519585 0.4524179 0.4528980 
  99.860%   99.861%   99.862%   99.863%   99.864%   99.865%   99.866%   99.867% 
0.4534038 0.4539119 0.4544063 0.4548707 0.4553759 0.4558686 0.4563653 0.4568722 
  99.868%   99.869%   99.870%   99.871%   99.872%   99.873%   99.874%   99.875% 
0.4573821 0.4578840 0.4583989 0.4589143 0.4594769 0.4600002 0.4605262 0.4610433 
  99.876%   99.877%   99.878%   99.879%   99.880%   99.881%   99.882%   99.883% 
0.4615925 0.4621315 0.4627020 0.4632434 0.4637832 0.4643543 0.4649337 0.4654880 
  99.884%   99.885%   99.886%   99.887%   99.888%   99.889%   99.890%   99.891% 
0.4660462 0.4666088 0.4671885 0.4677733 0.4683603 0.4689484 0.4695451 0.4701673 
  99.892%   99.893%   99.894%   99.895%   99.896%   99.897%   99.898%   99.899% 
0.4707648 0.4713997 0.4720035 0.4726282 0.4732663 0.4739473 0.4746094 0.4752658 
  99.900%   99.901%   99.902%   99.903%   99.904%   99.905%   99.906%   99.907% 
0.4759329 0.4766302 0.4772865 0.4779953 0.4786771 0.4793388 0.4800434 0.4807712 
  99.908%   99.909%   99.910%   99.911%   99.912%   99.913%   99.914%   99.915% 
0.4814547 0.4821663 0.4829368 0.4836771 0.4844781 0.4852712 0.4859976 0.4867548 
  99.916%   99.917%   99.918%   99.919%   99.920%   99.921%   99.922%   99.923% 
0.4875461 0.4882961 0.4890841 0.4898712 0.4906705 0.4915118 0.4923514 0.4931591 
  99.924%   99.925%   99.926%   99.927%   99.928%   99.929%   99.930%   99.931% 
0.4940853 0.4949576 0.4958333 0.4967416 0.4976022 0.4985003 0.4994355 0.5003148 
  99.932%   99.933%   99.934%   99.935%   99.936%   99.937%   99.938%   99.939% 
0.5013313 0.5022259 0.5031989 0.5042190 0.5052374 0.5062085 0.5072303 0.5082487 
  99.940%   99.941%   99.942%   99.943%   99.944%   99.945%   99.946%   99.947% 
0.5094274 0.5104740 0.5115420 0.5127118 0.5138662 0.5149889 0.5161890 0.5174145 
  99.948%   99.949%   99.950%   99.951%   99.952%   99.953%   99.954%   99.955% 
0.5187247 0.5198805 0.5211364 0.5224122 0.5237702 0.5251238 0.5265605 0.5279988 
  99.956%   99.957%   99.958%   99.959%   99.960%   99.961%   99.962%   99.963% 
0.5295543 0.5310315 0.5325413 0.5342177 0.5357850 0.5372732 0.5388499 0.5405769 
  99.964%   99.965%   99.966%   99.967%   99.968%   99.969%   99.970%   99.971% 
0.5423510 0.5441581 0.5460128 0.5479202 0.5498625 0.5519004 0.5539282 0.5560379 
  99.972%   99.973%   99.974%   99.975%   99.976%   99.977%   99.978%   99.979% 
0.5583100 0.5606870 0.5630045 0.5653728 0.5678048 0.5705340 0.5732993 0.5760961 
  99.980%   99.981%   99.982%   99.983%   99.984%   99.985%   99.986%   99.987% 
0.5791039 0.5823907 0.5858851 0.5895452 0.5930281 0.5970162 0.6011729 0.6056778 
  99.988%   99.989%   99.990%   99.991%   99.992%   99.993%   99.994%   99.995% 
0.6105514 0.6162098 0.6221033 0.6283341 0.6358205 0.6442232 0.6532281 0.6637751 
  99.996%   99.997%   99.998%   99.999%  100.000% 
0.6767983 0.6937813 0.7167134 0.7508506 1.0000000 

### 99.980%= 0.5791039
pvalue= 4.995467e-49

mi2p <- function(mi, n){
  alfa <- 1.062
  beta <- -48.7
  gamma <- -0.634
  x <- exp(-((mi*((-beta) + (-gamma)*n)) - alfa))
  return(x)
}

mi2p(0.5791039, 229)
[1] 4.995467e-49

x_norm[x_norm < 0.5791039] <- 0
write.table(x_norm, file = "sanos_norm_fpvalue.txt", sep = "\t", col.names= NA, row.names= T, quote = F)
xg_norm_fpvalue <- graph.adjacency(adjmatrix= x_norm, mode='undirected', diag=F, weighted=T)
xsif_norm_fpvalue <- get.data.frame(xg_norm_fpvalue)
write.table(xsif_norm_fpvalue, file = "sanos_norm_fpvalue_sif.txt", sep = "\t", col.names= T, row.names= F, quote = F )
xdpi <- aracne(mim =  x_norm, eps = 0.1)

write.table(xdpi, file = "sanos_norm_fpvalue_dpi.txt", sep = "\t", col.names= NA, row.names= T, quote = F)
xg_norm_fpvalue_dpi <- graph.adjacency(adjmatrix= xdpi, mode='undirected', diag=F, weighted=T)
xsif_norm_fpvalue_dpi <- get.data.frame(xg_norm_fpvalue_dpi)
write.table(xsif_norm_fpvalue_dpi, file = "sanos_norm_fpvalue_sif_dpi.txt", sep = "\t", col.names= T, row.names= F, quote = F )
