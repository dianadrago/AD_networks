###Unir listas de muestras "metadata" de 133 y HG1_st
metadata_U133 <- read.table("/mnt/e/diana/kenya/U133AFFY/metadata.tsv", header=TRUE)
metadata_HG1<- read.table("/mnt/e/diana/kenya/HuGeV1/metadata.HG1st2.tsv", header=TRUE)

dim(metadata_U133)
dim(metadata_HG1)

identical(rownames(metadata_U133), rownames(metadata_HG1))
metadata_complete <- (rbind(metadata_U133, metadata_HG1))
metadata_complete
write.table(metadata_complete, quote=FALSE, sep='\t', col.names=TRUE, row.names=FALSE, "metadata_complete.tsv")

####IntersecciÃ³n
U133 <- read.table("/mnt/e/diana/kenya/U133AFFY/U133_norm_complete_batch_corrected_mtx_colapsed.txt")
HG1 <- read.table("/mnt/e/diana/kenya/HuGeV1/HG10ST_colapsed_filtered.txt")

dim(U133)
dim(HG1)

U133_crop <- U133[intersect(rownames(U133), rownames(HG1)),]
HG1_crop <- HG1[intersect(rownames(U133), rownames(HG1)),]
dim(U133_crop)
dim(HG1_crop)

identical(rownames(U133_crop), rownames(HG1_crop))
complete_norm <- data.matrix(cbind(U133_crop, HG1_crop))
complete_final <- normalizeBetweenArrays(complete_norm)
write.table(complete_final, "complete_final_set.txt", quote = F, row.names = TRUE, col.names = NA, sep = "\t")

# combat

Rscript ~/rnw/normalization-preprocessing/ComBat_correction.R \
        --matrix /mnt/e/diana/kenya/complete_final_set.txt \
        --phenotype /mnt/e/diana/kenya/metadata_complete.tsv  \
        --output /mnt/e/diana/kenya/complete_all_combat_mtx.txt
        
# Separar casos y controles
matriz <- read.table("complete_all_combat_mtx.txt") 
meta <- read.table("metadata_complete.tsv", header= TRUE) 
dim(matriz)
dim(meta)
meta_casos <- meta[meta$outcome=="case",]
meta_controles <- meta[meta$outcome=="control",]
head(meta_casos)
head(meta_controles)
dim(meta_casos)
dim(meta_controles)
sample_sanos <- as.vector(meta_controles$sample_name)
sample_casos <- as.vector(meta_casos$sample_name)
sanos<- (matriz[,sample_sanos])
casos<- (matriz[,sample_casos])

write.table(sanos, "sanos.txt", quote = F, row.names = TRUE, col.names = NA, sep = "\t")
write.table(casos, "casos.txt", quote = F, row.names = TRUE, col.names = NA, sep = "\t")

####Quitar las muestras de celulas
celulas<- list.files(path = "/mnt/e/diana/kenya/GSE4757/")
muestras <- setdiff(as.vector(meta$sample_name), celulas)
dim(matriz)
filtro<- (matriz[,muestras])
dim(filtro)
meta_filtro<- (meta[meta$sample_name %in% muestras,])
dim(meta)
dim(meta_filtro)
head(meta_filtro)
filtro[1:5, 1:5]

meta_casos_sc <- meta_filtro[meta_filtro$outcome=="case",]
meta_controles_sc <- meta_filtro[meta_filtro$outcome=="control",]
head(meta_casos_sc)
head(meta_controles_sc)
dim(meta_casos_sc)
dim(meta_controles_sc)
sample_sanos_sc <- as.vector(meta_controles_sc$sample_name)
sample_casos_sc <- as.vector(meta_casos_sc$sample_name)
sanos_sc<- (filtro[,sample_sanos_sc])
casos_sc<- (filtro[,sample_casos_sc])

write.table(sanos_sc, "sanos_sc.txt", quote = F, row.names = TRUE, col.names = NA, sep = "\t")
write.table(casos_sc, "casos_sc.txt", quote = F, row.names = TRUE, col.names = NA, sep = "\t")

# 0) source ~/enviromets/csbig/bin/activate
# 1) modificar expfile, probes, run_id, y outdir
#probes no debe de tener ningun header

python /home/diana/rnw/parallel_aracne/genera_condor.py \
        --path_to_aracne2 /home/diana/ARACNE/aracne2 \
        --expfile /mnt/e/diana/kenya/sanos_sc.txt \
        --probes /mnt/e/diana/kenya/probes_ad.txt \
        --run_id kenya_ad_sanos_sc\
        --outdir /mnt/e/diana/kenya/kenya_ad_sanos_sc \
        --p 1

# 2)  Poner en el encabezado de .condor abajo de log
# requirements = Machine == "notron.inmegen.gob.mx"

# 3) Dentro del outdir darle en linea de comandos:
# condor_submit kenya/kenya_ad_sanos_sc.condor

# 4) condor_status
