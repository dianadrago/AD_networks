
library(plyr)
library(minet)
library(igraph)

adjs <- sort(list.files(pattern="*.adj"))

length(adjs)

adjtosqmtx <- function(g){
  a <- scan(file = g, skip = 17, what = "")
  m <- matrix(unlist(a[-(1)]), ncol = 2, byrow = T)
  rownames(m) <- c(m[,1])
  m <- t(m[,2])
  m
}

M <- lapply(adjs, adjtosqmtx)

> length(adjs)                                                                                                                                          
((12169**2)-12169)/2
[1] 74036196

x <- t(rbind.fill.matrix(M))
dim(x)
[1] 12169 12169

x[is.na(x)] <- 0
x[1:5, 1:5]
class(x) <- "numeric"
names <- gsub('.{6}$','', adjs)
colnames(x) <- names
x[1:5, 1:5]
isSymmetric(x)
[1] FALSE

x <- x[sort(rownames(x)), sort(colnames(x)) ]
isSymmetric(x)
[1] TRUE

x[1:5, 1:5]   

write.table(x, file = "x.adj.txt", sep = "\t", col.names= NA, row.names= T, quote = F )
xg <- graph.adjacency(adjmatrix= x, mode='undirected', diag=F, weighted=T)
xsif <- get.data.frame(xg)
write.table(xsif, file = "x.sif.txt", sep = "\t", col.names= T, row.names= F, quote = F )

normalit<-function(m){
     (m - min(m[upper.tri(m)]))/(max(m)-min(m[upper.tri(m)]))
}
x_norm <- (normalit(x)) 
min(x)
[1] 0

min(x_norm)                                                                                                       
[1] 0

max(x)                                                                                                            
0.657639

max(x_norm)                                                                                                       
[1] 1

write.table(x_norm, file = "x.adj_norm.txt", sep = "\t", col.names= NA, row.names= T, quote = F )                 
xg_norm <- graph.adjacency(adjmatrix= x_norm, mode='undirected', diag=F, weighted=T)                                  
xsif_norm <- get.data.frame(xg_norm)                                                                            
write.table(xsif_norm, file = "x.sif_norm.txt", sep = "\t", col.names= T, row.names= F, quote = F )

sanos_q <- x_norm[upper.tri(x_norm, diag=FALSE)]
quantile(sanos_q)
quantile(sanos_q, probs=seq(0.995, 1, 0.00001))

0.5540071 0.5543262 0.5546741 0.5550311 0.5553611 0.5556969 0.5560327 0.5563914 
  99.836%   99.837%   99.838%   99.839%   99.840%   99.841%   99.842%   99.843% 
0.5567444 0.5571073 0.5574742 0.5578430 0.5582033 0.5585727 0.5589268 0.5593145 
  99.844%   99.845%   99.846%   99.847%   99.848%   99.849%   99.850%   99.851% 
0.5596778 0.5600272 0.5604155 0.5607600 0.5611401 0.5615202 0.5619227 0.5623202 
  99.852%   99.853%   99.854%   99.855%   99.856%   99.857%   99.858%   99.859% 
0.5627075 0.5630741 0.5634771 0.5638800 0.5643181 0.5646921 0.5651143 0.5655408 
  99.860%   99.861%   99.862%   99.863%   99.864%   99.865%   99.866%   99.867% 
0.5659366 0.5663661 0.5667955 0.5672153 0.5676206 0.5680411 0.5684669 0.5688974 
  99.868%   99.869%   99.870%   99.871%   99.872%   99.873%   99.874%   99.875% 
0.5693187 0.5697339 0.5701567 0.5706177 0.5710680 0.5714999 0.5719655 0.5724097 
  99.876%   99.877%   99.878%   99.879%   99.880%   99.881%   99.882%   99.883% 
0.5728693 0.5733591 0.5738292 0.5743287 0.5748199 0.5752977 0.5757648 0.5762608 
  99.884%   99.885%   99.886%   99.887%   99.888%   99.889%   99.890%   99.891% 
0.5768043 0.5772994 0.5778269 0.5783322 0.5788488 0.5793274 0.5798574 0.5803937 
  99.892%   99.893%   99.894%   99.895%   99.896%   99.897%   99.898%   99.899% 
0.5809195 0.5814736 0.5820164 0.5825634 0.5831196 0.5836712 0.5842518 0.5848531 
  99.900%   99.901%   99.902%   99.903%   99.904%   99.905%   99.906%   99.907% 
0.5854056 0.5859981 0.5866039 0.5871946 0.5877868 0.5884106 0.5890080 0.5896384 
  99.908%   99.909%   99.910%   99.911%   99.912%   99.913%   99.914%   99.915% 
0.5902500 0.5908717 0.5915226 0.5921780 0.5928515 0.5934926 0.5941869 0.5948588 
  99.916%   99.917%   99.918%   99.919%   99.920%   99.921%   99.922%   99.923% 
0.5955939 0.5962645 0.5969871 0.5977005 0.5984382 0.5991739 0.5999338 0.6006748 
  99.924%   99.925%   99.926%   99.927%   99.928%   99.929%   99.930%   99.931% 
0.6014804 0.6022650 0.6029812 0.6037770 0.6045774 0.6053747 0.6061604 0.6069984 
  99.932%   99.933%   99.934%   99.935%   99.936%   99.937%   99.938%   99.939% 
0.6078660 0.6086927 0.6095217 0.6104107 0.6113164 0.6122340 0.6131034 0.6140290 
  99.940%   99.941%   99.942%   99.943%   99.944%   99.945%   99.946%   99.947% 
0.6149576 0.6159121 0.6169018 0.6179922 0.6190399 0.6200142 0.6210376 0.6220807 
  99.948%   99.949%   99.950%   99.951%   99.952%   99.953%   99.954%   99.955% 
0.6231528 0.6242654 0.6254664 0.6265854 0.6277306 0.6289666 0.6302504 0.6315036 
  99.956%   99.957%   99.958%   99.959%   99.960%   99.961%   99.962%   99.963% 
0.6328697 0.6342503 0.6355190 0.6369093 0.6382336 0.6396558 0.6411021 0.6427200 
  99.964%   99.965%   99.966%   99.967%   99.968%   99.969%   99.970%   99.971% 
0.6442247 0.6457537 0.6473142 0.6490730 0.6509013 0.6528004 0.6546334 0.6566536 
  99.972%   99.973%   99.974%   99.975%   99.976%   99.977%   99.978%   99.979% 
0.6585958 0.6606204 0.6627006 0.6649469 0.6672675 0.6697104 0.6721919 0.6747394 
  99.980%   99.981%   99.982%   99.983%   99.984%   99.985%   99.986%   99.987% 
0.6774973 0.6803219 0.6833744 0.6864608 0.6896483 0.6933821 0.6972778 0.7012546 
  99.988%   99.989%   99.990%   99.991%   99.992%   99.993%   99.994%   99.995% 
0.7056739 0.7104614 0.7157475 0.7212968 0.7270713 0.7337506 0.7419396 0.7504343 
  99.996%   99.997%   99.998%   99.999%  100.000% 
0.7617826 0.7758411 0.7956935 0.8270437 1.0000000

### 99.980%= 0.6774973
pvalue= 3.532289e-59
mi2p <- function(mi, n){
  alfa <- 1.062
  beta <- -48.7
  gamma <- -0.634
  x <- exp(-((mi*((-beta) + (-gamma)*n)) - alfa))
  return(x)
}

mi2p(0.6774973,239)                                                                                               
[1] 3.532289e-59 

x_norm[x_norm < 0.6774973] <- 0
write.table(x_norm, file = "sanos_norm_fpvalue.txt", sep = "\t", col.names= NA, row.names= T, quote = F)
xg_norm_fpvalue <- graph.adjacency(adjmatrix= x_norm, mode='undirected', diag=F, weighted=T)
xsif_norm_fpvalue <- get.data.frame(xg_norm_fpvalue)
write.table(xsif_norm_fpvalue, file = "sanos_norm_fpvalue_sif.txt", sep = "\t", col.names= T, row.names= F, quote = F )
xdpi <- aracne(mim =  x_norm, eps = 0.1)
