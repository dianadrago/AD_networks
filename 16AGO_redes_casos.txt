
library(plyr)
library(minet)
library(igraph)

adjs <- sort(list.files(pattern="*.adj"))

length(adjs)

adjtosqmtx <- function(g){
  a <- scan(file = g, skip = 17, what = "")
  m <- matrix(unlist(a[-(1)]), ncol = 2, byrow = T)
  rownames(m) <- c(m[,1])
  m <- t(m[,2])
  m
}

M <- lapply(adjs, adjtosqmtx)

> length(adjs)                                                                                                                                          
((12169**2)-12169)/2
[1] 74036196

x <- t(rbind.fill.matrix(M))
dim(x)
[1] 12169 12169

x[is.na(x)] <- 0
x[1:5, 1:5]
class(x) <- "numeric"
names <- gsub('.{6}$','', adjs)
colnames(x) <- names
x[1:5, 1:5]
isSymmetric(x)
[1] FALSE

x <- x[sort(rownames(x)), sort(colnames(x)) ]
isSymmetric(x)
[1] TRUE

x[1:5, 1:5]   

write.table(x, file = "x.adj_casos.txt", sep = "\t", col.names= NA, row.names= T, quote = F )
xg <- graph.adjacency(adjmatrix= x, mode='undirected', diag=F, weighted=T)
xsif <- get.data.frame(xg)
write.table(xsif, file = "x.sif_casos.txt", sep = "\t", col.names= T, row.names= F, quote = F )

normalit<-function(m){
     (m - min(m[upper.tri(m)]))/(max(m)-min(m[upper.tri(m)]))
}
x_norm <- (normalit(x)) 
diag(x_norm) <- 0
min(x)
[1] 0

min(x_norm)                                                                                                       
[1] 0

max(x)                                                                                                            
0.657639

max(x_norm)                                                                                                       
[1] 1

write.table(x_norm, file = "x.adj_norm_casos.txt", sep = "\t", col.names= NA, row.names= T, quote = F )                 
xg_norm <- graph.adjacency(adjmatrix= x_norm, mode='undirected', diag=F, weighted=T)                                  
xsif_norm <- get.data.frame(xg_norm)                                                                            
write.table(xsif_norm, file = "x.sif_norm_casos.txt", sep = "\t", col.names= T, row.names= F, quote = F )

casos_q <- x_norm[upper.tri(x_norm, diag=FALSE)]
quantile(casos_q)
quantile(casos_q, probs=seq(0.995, 1, 0.00001))

### 99.980%= 0.6774973
pvalue= 3.532289e-59
mi2p <- function(mi, n){
  alfa <- 1.062
  beta <- -48.7
  gamma <- -0.634
  x <- exp(-((mi*((-beta) + (-gamma)*n)) - alfa))
  return(x)
}

mi2p(0.6774973,239)                                                                                               
[1] 3.532289e-59 

x_norm[x_norm < 0.6774973] <- 0
write.table(x_norm, file = "casos_norm_fpvalue.txt", sep = "\t", col.names= NA, row.names= T, quote = F)
xg_norm_fpvalue <- graph.adjacency(adjmatrix= x_norm, mode='undirected', diag=F, weighted=T)
xsif_norm_fpvalue <- get.data.frame(xg_norm_fpvalue)
write.table(xsif_norm_fpvalue, file = "casos_norm_fpvalue_sif.txt", sep = "\t", col.names= T, row.names= F, quote = F )
xdpi <- aracne(mim =  x_norm, eps = 0.1)

write.table(xdpi, file = "casos_norm_fpvalue_dpi.txt", sep = "\t", col.names= NA, row.names= T, quote = F)
xg_norm_fpvalue_dpi <- graph.adjacency(adjmatrix= xdpi, mode='undirected', diag=F, weighted=T)
xsif_norm_fpvalue_dpi <- get.data.frame(xg_norm_fpvalue_dpi)
write.table(xsif_norm_fpvalue_dpi, file = "casos_norm_fpvalue_sif_dpi.txt", sep = "\t", col.names= T, row.names= F, quote = F )
